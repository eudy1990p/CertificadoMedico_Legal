/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exampleprint2;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Eudy
 */
public class viewSelectFile extends javax.swing.JFrame {

    /**
     * Creates new form viewSelectFile
     */
    
    private FileNameExtensionFilter extension = new FileNameExtensionFilter("All Type Imagens","png","jpg","gif");
    private String nameFile = "";
    private Boolean wait= true;
    
    public viewSelectFile() {
        initComponents();
        this.jFileChooser1.setFileFilter(extension);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = (JFileChooser) evt.getSource();
        
        String command = evt.getActionCommand();
        
        if(command.equals(JFileChooser.APPROVE_SELECTION)){
            File file = fileChooser.getSelectedFile();
            String path = file.getAbsolutePath();
            String name = file.getName();
           this.copyFile(path, name);
            
        }else if(command.equals(JFileChooser.CANCEL_SELECTION)){
            this.dispose();
        }
        
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void copyFile(String path,String name){
          try{
              this.nameFile ="C:/img_p/"+name;
            FileInputStream fis = new FileInputStream(path); //inFile -> Archivo a copiar
            FileOutputStream fos = new FileOutputStream(this.nameFile); //outFile -> Copia del archivo
            FileChannel inChannel = fis.getChannel(); 
            FileChannel outChannel = fos.getChannel(); 
            inChannel.transferTo(0, inChannel.size(), outChannel); 
            fis.close(); 
            fos.close();
            this.wait=false;
        }catch (IOException ioe) {
            System.err.println("Error al Generar Copia");
        }
    }
    
    public String getNameFile(){
        return this.nameFile;
    }
    
    public Boolean getWait(){
        return this.wait;
    }
    
    /**
     * @param args the command line arguments
     */

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}
